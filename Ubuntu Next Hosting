sudo apt-get update
sudo apt-get install nginx
Step 2:
Add your site in nginx

sudo vim /etc/nginx/sites-available/default
Set configuration according to below example. 

server {
        listen 80;
        server_name example.com www.example.com;
        root /var/www/html;
        index index.html index.htm;

        location / {
                    proxy_pass http://localhost:3000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                    proxy_set_header X-Forwarded-Host $host;
                    proxy_set_header X-Forwarded-Port $server_port;
        }
}
Step 3:
Restart Nginx server

sudo service nginx restart
Step 4:
Setup next.js app by clone from your repo.

git clone https://github.com/sanity-io/example-frontend-next-js.git
Reach inside the app directory.

cd example-frontend-next-js
Now you need to install dependencies and build the app.

yarn # Install dependencies
yarn build # build our app for production
yarn global add pm2 # install pm2 to keep next app active forever
Step 5:
Start your app with PM2

 


pm2 start npm --name "nextapp" -- start # start next app
Now your app is live. 

To check PM2 status run the command.

pm2 status
To stop your app you need to run the following command

pm2 stop nextapp # Here nextapp is your app name in PM2
To update your app run the command.

yarn build # Rebuild app for production
pm2 restart nextapp # Here nextapp is your app name
