const times = ["12:05 PM ET", "12:39 AM ET"];

// Custom comparison function to convert and compare the times
function compareTimes(time1, time2) {
  // Convert time1 to 24-hour format
  const convertedTime1 = convertTo24HourFormat(time1);
  
  // Convert time2 to 24-hour format
  const convertedTime2 = convertTo24HourFormat(time2);
  
  // Compare the converted times
  if (convertedTime1 < convertedTime2) {
    return -1;
  } else if (convertedTime1 > convertedTime2) {
    return 1;
  } else {
    return 0;
  }
}

// Function to convert time to 24-hour format
function convertTo24HourFormat(time) {
  const [hour, minute, period] = time.split(/:| /);
  let hour24 = parseInt(hour);
  
  if (period === "PM" && hour24 < 12) {
    hour24 += 12;
  } else if (period === "AM" && hour24 === 12) {
    hour24 = 0;
  }
  
  return `${hour24.toString().padStart(2, "0")}:${minute}`;
}

// Sort the times using the custom comparison function
const sortedTimes = times.sort(compareTimes);

// Output the sorted times
console.log(sortedTimes);

const sortedTimes = times.sort((a, b) => moment(a, 'h:mm A').diff(moment(b, 'h:mm A')));
const sortedTimes = times.sort((a, b) => {
  const timeA = new Date(a.replace(' AM', ''));
  const timeB = new Date(b.replace(' AM', ''));

  return timeA > timeB;
});



const times = ["12:05 PM ET", "12:39 AM ET", "10:30 AM ET", "08:15 PM ET"];

// Custom comparison function
const compareTimes = (time1, time2) => {
  // Extract hours, minutes, and period (AM/PM) from time1
  const [, hours1, minutes1, period1] = time1.match(/(\d+):(\d+) ([APM]{2})/);
  const formattedTime1 = `${hours1.padStart(2, '0')}:${minutes1.padStart(2, '0')} ${period1}`;

  // Extract hours, minutes, and period (AM/PM) from time2
  const [, hours2, minutes2, period2] = time2.match(/(\d+):(\d+) ([APM]{2})/);
  const formattedTime2 = `${hours2.padStart(2, '0')}:${minutes2.padStart(2, '0')} ${period2}`;

  // Use Moment.js to compare the formatted times
  return moment(formattedTime1, 'hh:mm A').diff(moment(formattedTime2, 'hh:mm A'));
};

// Sort the times using the custom comparison function
const sortedTimes = times.sort(compareTimes);

// Output the sorted times
console.log(sortedTimes);
